{"title":"Multi-Agent System","markdown":{"headingText":"Multi-Agent System","containsRefs":false,"markdown":"Multi-Agent Systems (MAS) are systems composed of multiple interacting agents, where each agent is an autonomous entity capable of perceiving its environment, making decisions, and taking actions independently or in collaboration with other agents.These agents can cooperate, compete, negotiate, or coordinate to achieve individual or collective goals [^1].\n\nIn this project, we utilized cooperative multi-agent system, and each agent will work cooperatively, and indepently focus on its assigned task. [^2] Three agents will be implemented in order to clean up the e-commerce datasets: retrieval and prompt generation agent, code generation agent, and code execution agent. We will use the OpenAI API [^3] , gpt-4o model, for all the processes.\n\n\n[^1]: https://www.cs.ox.ac.uk/people/michael.wooldridge/pubs/imas/IMAS2e.html\n[^2]: https://www.ibm.com/think/topics/multiagent-system\n[^3]: https://platform.openai.com/docs/overview\n\n![](/pics/multi-agent.png)\n\n## Retrieval and Prompt Generation Agent\n\nThe retrieval agent is responsible for format detection, schema extraction, contextual retrieval via FAISS and returns a structured context prompt. When a dataset is fed to the agent, it will identify whether it is CSV, JSON, XML, or XLSX using filename suffixes. From here, the file will be parsed to extract structural metadata like column names, types, and sample rows. The agent will query the FAISS vector database for sample data schemas, clean-up rules, and prompt examples for transformation. Eventually a prompt will be generated with matched schema, transformation rules, and examples to be consumed by the generation agent. This framework will be implemented through LangChain Tool abstraction. \n\n## Code Generation Agent\n\nThe code generation agent is responsible for code generation. The agent takes the prompt from the first agent and generates python code for cleaning and transforming the input data.\n\n## Code Execution Agent\n\nThis agent runs the generated code from the second agent to clean the raw data and save the cleaned dataset in the file path. If an error occurs, the error message will be sent back to the second agent to regenerate code, and this agent will run the newly generated code again until it saves the cleaned dataset successfully. \n\n\n## Example Usage\n### üîç STAGE 1: Analyzing data file and generating cleaning instructions...\n\n‚úÖ Cleaning instructions generated successfully!\n\n================================================================================\nCLEANING INSTRUCTIONS:\nTo clean and preprocess the dataset `makeup.csv`, follow these detailed instructions:\n\n1. Handling Missing Values\n- **Prime Column**: There is one missing value in the `Prime` column. Since this column indicates whether a product is available with Amazon Prime, you can fill the missing value with \"Not Available\" or \"No\" if the context allows, assuming non-Prime availability.\n\n2. Detecting and Treating Outliers\n- **Star Ratings**: The `star` column has a minimum value of 2.8, which might be an outlier given the mean of 4.26. Review these entries to ensure they are valid. If they are valid, retain them; otherwise, consider removing or flagging them for further review.\n- **Order and Page Number**: These columns seem to have reasonable ranges given the context (order of appearance and page number), so no immediate action is needed unless business logic dictates otherwise.\n\n3. Data Type Issues and Conversions\n- **ReviewsCount**: Convert this column from `object` to `int64`. First, remove commas from the numbers and then convert.\n- **Price**: Convert this column from `object` to `float64`. Remove the dollar sign `$` before conversion.\n- **Prime**: Convert this column to a boolean type where \"Amazon Prime\" is `True` and any other value or missing is `False`.\n\n4. Format Standardization\n- **ÂΩìÂâçÊó∂Èó¥**: This column is already in a datetime format, but ensure it is recognized as such by converting it to `datetime64[ns]` if necessary.\n- **Price**: Ensure all prices are in a consistent currency format, assuming USD based on the dollar sign.\n\n5. Categorical Encoding\n- **Key Words**: Convert this column to a categorical type. If needed for modeling, use one-hot encoding.\n- **Prime**: As mentioned, convert to boolean for easier analysis.\n\n6. Text Fields Cleaning and Normalization\n- **Title**: Normalize text by converting to lowercase to ensure consistency in text analysis.\n- **Title URL**: This column seems to be a URL and might not need cleaning unless used for specific analysis.\n\n7. Identifying Potential Duplicates\n- **Duplicate Rows**: The dataset reports zero duplicate rows. However, ensure there are no logical duplicates by checking for identical `asin` values, as this should be unique for each product.\n\n8. Renaming Columns for Clarity\n- **ÂΩìÂâçÊó∂Èó¥**: Rename to `current_time` for consistency and clarity.\n- **Title URL**: Rename to `product_url` for clarity.\n\n9. Derived Features\n- **Review to Price Ratio**: Create a new feature by dividing `ReviewsCount` by `price` to understand the review density relative to price.\n- **Star to Price Ratio**: Create a new feature by dividing `star` by `price` to assess value for money based on ratings.\n- **Is Prime**: As a boolean feature, this can be used directly in models to understand the impact of Prime availability.\n\nAdditional StepsÔºö\n\n- **Data Validation**: After cleaning, validate the data types and check for any remaining inconsistencies.\n- **Documentation**: Document all changes made to the dataset for reproducibility and future reference.\n\nBy following these steps, you will ensure the dataset is clean, consistent, and ready for analysis or modeling.\n\n================================================================================\n\n### üîß STAGE 2: Generating data cleaning code based on instructions...\n\n‚úÖ Cleaning code generated successfully!\n\nüíæ Cleaning code saved to /Users/sherryqin/Desktop/agent/clean_makeup_attempt1.py\n\n================================================================================\n\n### ‚öôÔ∏è STAGE 3: Executing cleaning code (attempt 1/4)...\nExecuting cleaning code...\nWarning: No main() function found in generated code. Trying subprocess execution...\nError executing cleaning code:\nSTDOUT: \nSTDERR: /Users/sherryqin/Desktop/agent/clean_makeup_attempt1.py:13: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n\n  df['Prime'].fillna('No', inplace=True)\n\n:::{.scrolling}\n\n    Traceback (most recent call last):\n    File \"/Users/sherryqin/Desktop/agent/clean_makeup_attempt1.py\", line 73, in <module>\n        clean_makeup_data(filepath)\n    File \"/Users/sherryqin/Desktop/agent/clean_makeup_attempt1.py\", line 21, in clean_makeup_data\n        df['ReviewsCount'] = df['ReviewsCount'].str.replace(',', '').astype('int64')\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    File \"/Users/sherryqin/anaconda3/lib/python3.11/site-packages/pandas/core/generic.py\", line 6643, in astype\n        new_data = self._mgr.astype(dtype=dtype, copy=copy, errors=errors)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    File \"/Users/sherryqin/anaconda3/lib/python3.11/site-packages/pandas/core/internals/managers.py\", line 430, in astype\n        return self.apply(\n            ^^^^^^^^^^^\n    File \"/Users/sherryqin/anaconda3/lib/python3.11/site-packages/pandas/core/internals/managers.py\", line 363, in apply\n        applied = getattr(b, f)(**kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^\n    File \"/Users/sherryqin/anaconda3/lib/python3.11/site-packages/pandas/core/internals/blocks.py\", line 758, in astype\n        new_values = astype_array_safe(values, dtype, copy=copy, errors=errors)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    File \"/Users/sherryqin/anaconda3/lib/python3.11/site-packages/pandas/core/dtypes/astype.py\", line 237, in astype_array_safe\n        new_values = astype_array(values, dtype, copy=copy)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    File \"/Users/sherryqin/anaconda3/lib/python3.11/site-packages/pandas/core/dtypes/astype.py\", line 182, in astype_array\n        values = _astype_nansafe(values, dtype, copy=copy)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    File \"/Users/sherryqin/anaconda3/lib/python3.11/site-packages/pandas/core/dtypes/astype.py\", line 133, in _astype_nansafe\n        return arr.astype(dtype, copy=True)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ValueError: cannot convert float NaN to integer\n\n:::\n\n‚ùå Execution failed. Error: Error executing cleaning code:\n\nSTDOUT: \n\nSTDERR: /Users/sherryqin/Desktop/agent/clean_makeup_attempt1.py:13: \n\nFutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n\nThe behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n\nFor example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n\n================================================================================\n\n### Error Occured - Regenerating Code\nüîÑ Attempting code regeneration (1/3)...\n\n#### üîß STAGE 2: ReGenerating data cleaning code based on instructions...\n\n‚úÖ Cleaning code regenerated successfully!\n\nüíæ Cleaning code saved to /Users/sherryqin/Desktop/agent/clean_makeup_attempt2.py\n\n#### ‚öôÔ∏è STAGE 3: Executing cleaning code (attempt 2/4)...\nExecuting cleaning code...\nWarning: No main() function found in generated code. Trying subprocess execution...\n\n================================================================================\n\n‚úÖ Cleaning completed successfully! Cleaned data saved to cleaned_makeup.csv\n\nüéâ The complete data cleaning pipeline finished successfully!\n   Original data: makeup.csv\n\n   Cleaned data: cleaned_makeup.csv\n\n   DATA SUMMARY:\n\n   Rows: 1006\n\n   Columns: 13\n\n   Missing values: 145","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"agent.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.549","theme":"morph"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}